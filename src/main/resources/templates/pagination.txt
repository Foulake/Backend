{
  "data": [
    { "id": 1, "name": "Item 1" },
    { "id": 2, "name": "Item 2" },
    // plus d'items...
  ],
  "total": 50,
  "page": 1,
  "limit": 10
}
--------------------------------------

import { Injectable } from '@angular/core';
import { HttpClient, HttpParams } from '@angular/common/http';
import { Observable } from 'rxjs';

export interface ApiResponse {
  data: any[];
  total: number;
  page: number;
  limit: number;
}

@Injectable({
  providedIn: 'root'
})
export class ApiService {
  private apiUrl = 'https://your-api-url.com/items';

  constructor(private http: HttpClient) { }

  getItems(page: number, limit: number): Observable<ApiResponse> {
    const params = new HttpParams()
      .set('page', page.toString())
      .set('limit', limit.toString());

    return this.http.get<ApiResponse>(this.apiUrl, { params });
  }
}
----------------------------------------

import { Component, OnInit } from '@angular/core';
import { ApiService, ApiResponse } from './api.service';

@Component({
  selector: 'app-items',
  template: `
    <ul>
      <li *ngFor="let item of items">{{ item.name }}</li>
    </ul>
    <button (click)="loadPage(currentPage - 1)" [disabled]="currentPage === 1">Précédent</button>
    <button (click)="loadPage(currentPage + 1)" [disabled]="currentPage === totalPages">Suivant</button>
  `
})
export class ItemsComponent implements OnInit {
  items: any[] = [];
  currentPage = 1;
  totalPages = 0;
  limit = 10;

  constructor(private apiService: ApiService) { }

  ngOnInit() {
    this.loadPage(1);
  }

  loadPage(page: number) {
    this.apiService.getItems(page, this.limit).subscribe({
      next: (response: ApiResponse) => {
        this.items = response.data;
        this.totalPages = Math.ceil(response.total / this.limit);
        this.currentPage = response.page;
      },
      error: (error) => {
        console.error('Error fetching data: ', error);
      }
    });
  }
}
------------------------------------

